name: Deploy Production
on: [push]
env:
  AWS_REGION: us-east-1
jobs:
  build:
    # runs-on: ubuntu-latest
    # steps:
    #   - name: Checking out code
    #     uses: actions/checkout@v3
    #   - name: Installing Node.js
    #     uses: actions/setup-node@v3
    #     with:
    #       node-version: "16"
    #   - name: Installing dependencies
    #     run: npm install
    #   - name: Building project
    #     run: npm run build
    #   - name: Configure AWS Credentials
    #     uses: aws-actions/configure-aws-credentials@v1
    #     with:
    #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       aws-region: us-west-1
    #   - name: Deploy to S3 bucket
    #     run: aws s3 sync ./build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete

    runs-on: ubuntu-latest
    steps:
      # Clone the repo
      - name: Clone repository
        uses: actions/checkout@v3
      # Cache node modules
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: yarn-deps-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-${{ hashFiles('yarn.lock') }}
      # Build the static site
      - name: Create static build
        run: npm i && npm run build #yarn install && yarn build
      # Upload the artifact for other stages to use
      - name: Share artifact in github workflow
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Download the build artifact
      - name: Get build artifact
        uses: actions/download-artifact@v1
        with:
          name: build
      # Setup the AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # Copy the files from /build to s3 bucket
      - name: Deploy static site to S3 bucket
        run: aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }} --delete
        working-directory: build
      # Invalidate index file in Cloudfront (this forces edges to fetch the latest index.html)
      - name: invalidate
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: '/index.html'
          AWS_REGION: $AWS_REGION
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}